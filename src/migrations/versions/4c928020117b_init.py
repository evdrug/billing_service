"""init

Revision ID: 4c928020117b
Revises: 
Create Date: 2022-07-19 19:18:38.001878

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c928020117b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('stripe_product_id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=250), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_id'), 'product', ['id'], unique=False)
    op.create_table('stripe_customer',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('stripe_customer_id', postgresql.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stripe_customer_id'), 'stripe_customer', ['id'], unique=False)
    op.create_table('price',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('stripe_product_id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(length=250), nullable=False),
    sa.Column('unit_amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=250), nullable=False),
    sa.Column('permission_id', postgresql.UUID(), nullable=False),
    sa.Column('product_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_price_id'), 'price', ['id'], unique=False)
    op.create_table('billing_history',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('stripe_customer', postgresql.UUID(), nullable=False),
    sa.Column('price', postgresql.UUID(), nullable=False),
    sa.Column('stripe_subscription_id', postgresql.UUID(), nullable=False),
    sa.Column('subscription_status', postgresql.ENUM('incomplete', 'incomplete_expired', 'trialing', 'active', 'past_due', 'canceled', 'unpaid', name='subscriptionstatus'), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['price'], ['price.id'], ),
    sa.ForeignKeyConstraint(['stripe_customer'], ['stripe_customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_history_id'), 'billing_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_billing_history_id'), table_name='billing_history')
    op.drop_table('billing_history')
    op.drop_index(op.f('ix_price_id'), table_name='price')
    op.drop_table('price')
    op.drop_index(op.f('ix_stripe_customer_id'), table_name='stripe_customer')
    op.drop_table('stripe_customer')
    op.drop_index(op.f('ix_product_id'), table_name='product')
    op.drop_table('product')
    # ### end Alembic commands ###
